# -*- coding: utf-8 -*-
"""10_Despliegue_Videojuegos_con_streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1__herJWrLyraKJs99F-fFpRZXgBFtCnD

# Despliegue

- Cargamos el modelo
- Cargamos los datos futuros
- Preparar los datos futuros
- Aplicamos el modelo para la predicción
"""

#Cargamos librerías principales
import matplotlib
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Cargamos el modelo
import pickle
filename = 'modelo-reg.pkl'
model_Tree,model_Knn, model_NN, min_max_scaler, variables = pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros
#data = pd.read_csv("videojuegos-datosFuturos.csv")
#data.head()

#Interfaz gráfica
#Se crea interfaz gráfica con streamlit para captura de los datos

import streamlit as st

st.title('Predicción del valor de arriendo de un inmueble')

tipo_inmueble = st.selectbox('Tipo de Inmueble', ['Apartamento', 'Casa', 'Estudio'])
departamento = st.selectbox('Departamento', ['Antioquia', 'Cundinamarca', 'Valle', 'Atlántico'])
estrato = st.slider('Estrato', min_value=1, max_value=6, value=3)


#Dataframe
datos = pd.DataFrame([[tipo_inmueble, departamento, estrato]],
                     columns=['Tipo Inmueble', 'Departamento', 'Estrato'])
#One-hot encoding
datos_encoded = pd.get_dummies(datos, columns=['Tipo Inmueble', 'Departamento'], drop_first=False)

# Reindexar para que coincida con el modelo
datos_encoded = datos_encoded.reindex(columns=model_Tree,model_Knn, model_NN, min_max_scaler, fill_value=0)
# Predicción
prediccion = model.predict(datos_encoded)
# Mostrar resultado
st.subheader(f'Valor estimado de arriendo: ${int(prediccion[0]):,}')
